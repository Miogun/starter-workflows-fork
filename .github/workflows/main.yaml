name: Legendary CI/CD

on:
  push:
    branches: [ "main" ]    # main 브랜치에 push하면 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 소스코드 체크아웃
        uses: actions/checkout@v4

      # 예시: Node.js 빌드 (Spring Boot면 ./gradlew build 등으로 교체)
      - name: 앱 빌드
        run: echo "여기에 빌드 명령 입력" # 예: npm install && npm run build

      - name: 도커허브 로그인
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 도커 이미지 빌드
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/legendary-app:${{ github.sha }} .

      - name: 도커 이미지 푸시
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/legendary-app:${{ github.sha }}

      - name: Azure VM 원격 배포 (SSH)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: azureuser
          key: ${{ secrets.SERVER_KEY }}
          script: |
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/legendary-app:${{ github.sha }}
            docker stop legendary-app || true
            docker rm legendary-app || true
            docker run -d --name legendary-app -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/legendary-app:${{ github.sha }}
